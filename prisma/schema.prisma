generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String?
  name     String?
  avatar   String?

  provider             AuthProvider      @default(CREDENTIALS) // Credentials / Google / Facebook
  providerId           String? // Social provider unique id
  providerAccessToken  String? // OAuth access token (Google, Facebook...)
  providerRefreshToken String? // OAuth access token (Google, Facebook...)
  isCalendarLinked     Boolean           @default(false) // Linked Calendar status
  calendarProvider     CalendarProvider? // GOOGLE / OUTLOOK

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks  Task[]
  goals  Goal[]
  events Event[]
}

enum AuthProvider {
  CREDENTIALS
  GOOGLE
  FACEBOOK
}

enum CalendarProvider {
  GOOGLE
  OUTLOOK
}

model Goal {
  id          String     @id @default(uuid())
  title       String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  status      GoalStatus @default(ACTIVE)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  tasks Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event[]
}

enum GoalStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
}

model Task {
  id            String      @id @default(uuid())
  title         String
  description   String?
  startDate     DateTime?
  dueDate       DateTime?
  repeat        TaskRepeat?
  repeatDays    String[]
  status        TaskStatus  @default(PENDING)
  estimatedTime Int?
  actualTime    Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  goalId String?
  goal   Goal?   @relation(fields: [goalId], references: [id])

  reminders Reminder[]

  events Event[]
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
  SKIPPED
}

enum TaskRepeat {
  DAILY
  WEEKLY
  MONTHLY
}

model Event {
  id     String @id @default(uuid())
  taskId String @unique
  task   Task   @relation(fields: [taskId], references: [id])

  calendarProvider CalendarProvider
  externalEventId  String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  User             User?            @relation(fields: [userId], references: [id])
  userId           String?
  Goal             Goal?            @relation(fields: [goalId], references: [id])
  goalId           String?
}

model Reminder {
  id      String         @id @default(uuid())
  time    DateTime
  sent    Boolean        @default(false)
  method  ReminderMethod @default(PUSH) // Push Notification, Email hoặc cả 2
  message String?

  taskId String
  task   Task   @relation(fields: [taskId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ReminderMethod {
  PUSH
  EMAIL
  BOTH
}
